/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "listdir.h"
#include <errno.h>
#include <dirent.h>

readdir_ret *
readdir_1_svc(nametype *argp, struct svc_req *rqstp){
  static readdir_ret result;

  
  //Open the directory
  DIR *targetdir = opendir(*argp);

  //If we fail to open, set errno and return
  if(targetdir == NULL){
    result.err = errno;
    return &result;
  }
  
  //Free previous memory
  xdr_free((xdrproc_t)xdr_readdir_ret, (char *)&result);

  //Loop through the directory object and add the names to linked list
  struct dirent *object;
  namelist current_node;
  namelist* current_ptr = &result.readdir_ret_u.list;
  while(object = readdir(targetdir)){
    *current_ptr = (namenode *) malloc(sizeof(namenode));
    current_node = *current_ptr;
    current_node->name = (char *) malloc(sizeof(char)*MAXLEN+1);
    strncpy(current_node -> name, object->d_name, MAXLEN);
    current_node->name[MAXLEN] = '\0';
    current_ptr = &(current_node -> next);
  }

  //Set last node's next ptr to NULL and errno to 0 because it succeeded.
  *current_ptr = NULL;
  result.err = 0;

  //Close directory and return
  closedir(targetdir);
  return &result;
}
